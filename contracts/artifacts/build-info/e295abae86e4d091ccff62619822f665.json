{
	"id": "e295abae86e4d091ccff62619822f665",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Fiduciary.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.19;\r\n\r\ncontract Fiduciary {\r\n    \r\n    address regulator;\r\n\t\r\n\tstruct Settlor {\r\n\t\taddress addressS;\r\n\t\tuint amountMoney;\r\n\t}\r\n\t\r\n\tstruct Beneficiary {\r\n\t\taddress addressB; \r\n\t\tuint benefits;\r\n\t}\r\n\t\r\n\tstruct FiduciaryRelationship {\r\n\t\taddress settlor;\r\n\t\tBeneficiary [] beneficiaries;\r\n\t\tmapping (address => uint) beneficiariesP;\r\n\t\tuint balance;\r\n\t\tuint deadline;\r\n\t}\r\n\t\r\n\tFiduciaryRelationship [] relations;\r\n\t\r\n\tconstructor () {\r\n\t\tregulator = msg.sender;\r\n\t}\r\n\t\r\n    function getRegulator () public view returns (address) {\r\n        return regulator;\r\n    }\r\n\r\n    function createFiduciaryRelationship (address _settlor) public {\r\n        require (regulator == msg.sender, \"The regulator is the only who can create a fiduciary relationship\");\r\n        FiduciaryRelationship storage relation = relations.push();\r\n        relation.settlor = _settlor;\r\n        \r\n    }\r\n\r\n\t\r\n\t\t\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Fiduciary.sol": {
				"Fiduciary": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_settlor",
									"type": "address"
								}
							],
							"name": "createFiduciaryRelationship",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRegulator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Fiduciary.sol\":63:937  contract Fiduciary {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Fiduciary.sol\":471:518  constructor () {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Fiduciary.sol\":503:513  msg.sender */\n  caller\n    /* \"contracts/Fiduciary.sol\":491:500  regulator */\n  0x00\n  dup1\n    /* \"contracts/Fiduciary.sol\":491:513  regulator = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Fiduciary.sol\":63:937  contract Fiduciary {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Fiduciary.sol\":63:937  contract Fiduciary {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x02550b78\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf7e317f4\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Fiduciary.sol\":625:925  function createFiduciaryRelationship (address _settlor) public {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/Fiduciary.sol\":527:617  function getRegulator () public view returns (address) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Fiduciary.sol\":625:925  function createFiduciaryRelationship (address _settlor) public {... */\n    tag_8:\n        /* \"contracts/Fiduciary.sol\":721:731  msg.sender */\n      caller\n        /* \"contracts/Fiduciary.sol\":708:731  regulator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Fiduciary.sol\":708:717  regulator */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Fiduciary.sol\":708:731  regulator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Fiduciary.sol\":699:801  require (regulator == msg.sender, \"The regulator is the only who can create a fiduciary relationship\") */\n      tag_14\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_15\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_14:\n        /* \"contracts/Fiduciary.sol\":812:850  FiduciaryRelationship storage relation */\n      0x00\n        /* \"contracts/Fiduciary.sol\":853:862  relations */\n      0x01\n        /* \"contracts/Fiduciary.sol\":853:869  relations.push() */\n      dup1\n      dup2\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/Fiduciary.sol\":812:869  FiduciaryRelationship storage relation = relations.push() */\n      swap1\n      pop\n        /* \"contracts/Fiduciary.sol\":899:907  _settlor */\n      dup2\n        /* \"contracts/Fiduciary.sol\":880:888  relation */\n      dup2\n        /* \"contracts/Fiduciary.sol\":880:896  relation.settlor */\n      0x00\n      add\n      0x00\n        /* \"contracts/Fiduciary.sol\":880:907  relation.settlor = _settlor */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Fiduciary.sol\":688:925  {... */\n      pop\n        /* \"contracts/Fiduciary.sol\":625:925  function createFiduciaryRelationship (address _settlor) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Fiduciary.sol\":527:617  function getRegulator () public view returns (address) {... */\n    tag_10:\n        /* \"contracts/Fiduciary.sol\":573:580  address */\n      0x00\n        /* \"contracts/Fiduciary.sol\":600:609  regulator */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Fiduciary.sol\":593:609  return regulator */\n      swap1\n      pop\n        /* \"contracts/Fiduciary.sol\":527:617  function getRegulator () public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_20:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_22:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_23:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_36\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_22\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_24:\n        /* \"#utility.yul\":641:665   */\n      tag_38\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_23\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_39:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_25:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_41\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_24\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_7:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_43\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_44\n      tag_20\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":917:1036   */\n    tag_43:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_45\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_25\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1294   */\n    tag_26:\n        /* \"#utility.yul\":1263:1287   */\n      tag_47\n        /* \"#utility.yul\":1281:1286   */\n      dup2\n        /* \"#utility.yul\":1263:1287   */\n      tag_23\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1258:1261   */\n      dup3\n        /* \"#utility.yul\":1251:1288   */\n      mstore\n        /* \"#utility.yul\":1176:1294   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1300:1522   */\n    tag_12:\n        /* \"#utility.yul\":1393:1397   */\n      0x00\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1420:1429   */\n      dup3\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"#utility.yul\":1408:1434   */\n      swap1\n      pop\n        /* \"#utility.yul\":1444:1515   */\n      tag_49\n        /* \"#utility.yul\":1512:1513   */\n      0x00\n        /* \"#utility.yul\":1501:1510   */\n      dup4\n        /* \"#utility.yul\":1497:1514   */\n      add\n        /* \"#utility.yul\":1488:1494   */\n      dup5\n        /* \"#utility.yul\":1444:1515   */\n      tag_26\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1300:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1697   */\n    tag_27:\n        /* \"#utility.yul\":1612:1623   */\n      0x00\n        /* \"#utility.yul\":1646:1652   */\n      dup3\n        /* \"#utility.yul\":1641:1644   */\n      dup3\n        /* \"#utility.yul\":1634:1653   */\n      mstore\n        /* \"#utility.yul\":1686:1690   */\n      0x20\n        /* \"#utility.yul\":1681:1684   */\n      dup3\n        /* \"#utility.yul\":1677:1691   */\n      add\n        /* \"#utility.yul\":1662:1691   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1703:1992   */\n    tag_28:\n        /* \"#utility.yul\":1843:1877   */\n      0x54686520726567756c61746f7220697320746865206f6e6c792077686f206361\n        /* \"#utility.yul\":1839:1840   */\n      0x00\n        /* \"#utility.yul\":1831:1837   */\n      dup3\n        /* \"#utility.yul\":1827:1841   */\n      add\n        /* \"#utility.yul\":1820:1878   */\n      mstore\n        /* \"#utility.yul\":1912:1946   */\n      0x6e206372656174652061206669647563696172792072656c6174696f6e736869\n        /* \"#utility.yul\":1907:1909   */\n      0x20\n        /* \"#utility.yul\":1899:1905   */\n      dup3\n        /* \"#utility.yul\":1895:1910   */\n      add\n        /* \"#utility.yul\":1888:1947   */\n      mstore\n        /* \"#utility.yul\":1981:1984   */\n      0x7000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1976:1978   */\n      0x40\n        /* \"#utility.yul\":1968:1974   */\n      dup3\n        /* \"#utility.yul\":1964:1979   */\n      add\n        /* \"#utility.yul\":1957:1985   */\n      mstore\n        /* \"#utility.yul\":1703:1992   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1998:2364   */\n    tag_29:\n        /* \"#utility.yul\":2140:2143   */\n      0x00\n        /* \"#utility.yul\":2161:2228   */\n      tag_53\n        /* \"#utility.yul\":2225:2227   */\n      0x41\n        /* \"#utility.yul\":2220:2223   */\n      dup4\n        /* \"#utility.yul\":2161:2228   */\n      tag_27\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":2154:2228   */\n      swap2\n      pop\n        /* \"#utility.yul\":2237:2330   */\n      tag_54\n        /* \"#utility.yul\":2326:2329   */\n      dup3\n        /* \"#utility.yul\":2237:2330   */\n      tag_28\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":2355:2357   */\n      0x60\n        /* \"#utility.yul\":2350:2353   */\n      dup3\n        /* \"#utility.yul\":2346:2358   */\n      add\n        /* \"#utility.yul\":2339:2358   */\n      swap1\n      pop\n        /* \"#utility.yul\":1998:2364   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2370:2789   */\n    tag_16:\n        /* \"#utility.yul\":2536:2540   */\n      0x00\n        /* \"#utility.yul\":2574:2576   */\n      0x20\n        /* \"#utility.yul\":2563:2572   */\n      dup3\n        /* \"#utility.yul\":2559:2577   */\n      add\n        /* \"#utility.yul\":2551:2577   */\n      swap1\n      pop\n        /* \"#utility.yul\":2623:2632   */\n      dup2\n        /* \"#utility.yul\":2617:2621   */\n      dup2\n        /* \"#utility.yul\":2613:2633   */\n      sub\n        /* \"#utility.yul\":2609:2610   */\n      0x00\n        /* \"#utility.yul\":2598:2607   */\n      dup4\n        /* \"#utility.yul\":2594:2611   */\n      add\n        /* \"#utility.yul\":2587:2634   */\n      mstore\n        /* \"#utility.yul\":2651:2782   */\n      tag_56\n        /* \"#utility.yul\":2777:2781   */\n      dup2\n        /* \"#utility.yul\":2651:2782   */\n      tag_29\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":2643:2782   */\n      swap1\n      pop\n        /* \"#utility.yul\":2370:2789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220867f84f23f4f2f983310a9b9462bdff39231f846862868342d2bc1f29118127164736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_41": {
									"entryPoint": null,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061034f806100606000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806302550b781461003b578063f7e317f414610057575b600080fd5b610055600480360381019061005091906101f9565b610075565b005b61005f61016d565b60405161006c9190610235565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610103576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fa906102f9565b60405180910390fd5b6000600180816001815401808255809150500390600052602060002090600502019050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101c68261019b565b9050919050565b6101d6816101bb565b81146101e157600080fd5b50565b6000813590506101f3816101cd565b92915050565b60006020828403121561020f5761020e610196565b5b600061021d848285016101e4565b91505092915050565b61022f816101bb565b82525050565b600060208201905061024a6000830184610226565b92915050565b600082825260208201905092915050565b7f54686520726567756c61746f7220697320746865206f6e6c792077686f20636160008201527f6e206372656174652061206669647563696172792072656c6174696f6e73686960208201527f7000000000000000000000000000000000000000000000000000000000000000604082015250565b60006102e3604183610250565b91506102ee82610261565b606082019050919050565b60006020820190508181036000830152610312816102d6565b905091905056fea2646970667358221220867f84f23f4f2f983310a9b9462bdff39231f846862868342d2bc1f29118127164736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x34F DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2550B78 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF7E317F4 EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1F9 JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x16D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x235 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x103 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA SWAP1 PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6 DUP3 PUSH2 0x19B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D6 DUP2 PUSH2 0x1BB JUMP JUMPDEST DUP2 EQ PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F3 DUP2 PUSH2 0x1CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20F JUMPI PUSH2 0x20E PUSH2 0x196 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21D DUP5 DUP3 DUP6 ADD PUSH2 0x1E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22F DUP2 PUSH2 0x1BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x226 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54686520726567756C61746F7220697320746865206F6E6C792077686F206361 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E206372656174652061206669647563696172792072656C6174696F6E736869 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E3 PUSH1 0x41 DUP4 PUSH2 0x250 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EE DUP3 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x312 DUP2 PUSH2 0x2D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH32 0x84F23F4F2F983310A9B9462BDFF39231F846862868342D2BC1F2911812716473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "63:874:0:-:0;;;471:47;;;;;;;;;;503:10;491:9;;:22;;;;;;;;;;;;;;;;;;63:874;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@createFiduciaryRelationship_76": {
									"entryPoint": 117,
									"id": 76,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getRegulator_49": {
									"entryPoint": 365,
									"id": 49,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_44ccadcc997c1bf2b955faaccd53a870f9ed99f9be8dd32c3b85e797b08a8cad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_44ccadcc997c1bf2b955faaccd53a870f9ed99f9be8dd32c3b85e797b08a8cad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_44ccadcc997c1bf2b955faaccd53a870f9ed99f9be8dd32c3b85e797b08a8cad": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2792:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1241:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1258:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1281:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1263:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1263:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1229:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1236:3:1",
														"type": ""
													}
												],
												"src": "1176:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1408:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1431:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1408:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1501:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1512:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1444:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1444:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1444:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1370:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1382:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1393:4:1",
														"type": ""
													}
												],
												"src": "1300:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1624:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1641:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1646:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1634:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1634:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1662:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1681:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1677:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1677:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1662:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1596:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1601:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1612:11:1",
														"type": ""
													}
												],
												"src": "1528:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1809:183:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1831:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1839:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1827:14:1"
																	},
																	{
																		"hexValue": "54686520726567756c61746f7220697320746865206f6e6c792077686f206361",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1843:34:1",
																		"type": "",
																		"value": "The regulator is the only who ca"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1820:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1820:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1820:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1899:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1907:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1895:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1895:15:1"
																	},
																	{
																		"hexValue": "6e206372656174652061206669647563696172792072656c6174696f6e736869",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1912:34:1",
																		"type": "",
																		"value": "n create a fiduciary relationshi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1888:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1888:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1888:59:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1968:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1976:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1964:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1964:15:1"
																	},
																	{
																		"hexValue": "70",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1981:3:1",
																		"type": "",
																		"value": "p"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1957:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1957:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1957:28:1"
														}
													]
												},
												"name": "store_literal_in_memory_44ccadcc997c1bf2b955faaccd53a870f9ed99f9be8dd32c3b85e797b08a8cad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1801:6:1",
														"type": ""
													}
												],
												"src": "1703:289:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2144:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2154:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2220:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2225:2:1",
																		"type": "",
																		"value": "65"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2161:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2161:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2154:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2326:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_44ccadcc997c1bf2b955faaccd53a870f9ed99f9be8dd32c3b85e797b08a8cad",
																	"nodeType": "YulIdentifier",
																	"src": "2237:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2237:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2237:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2339:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2350:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2355:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2346:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2346:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2339:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_44ccadcc997c1bf2b955faaccd53a870f9ed99f9be8dd32c3b85e797b08a8cad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2132:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2140:3:1",
														"type": ""
													}
												],
												"src": "1998:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2541:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2551:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2563:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2574:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2559:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2559:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2551:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2598:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2609:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2594:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2594:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2617:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2623:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2613:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2613:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2587:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2587:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2587:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2643:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2777:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_44ccadcc997c1bf2b955faaccd53a870f9ed99f9be8dd32c3b85e797b08a8cad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2651:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2643:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_44ccadcc997c1bf2b955faaccd53a870f9ed99f9be8dd32c3b85e797b08a8cad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2521:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2536:4:1",
														"type": ""
													}
												],
												"src": "2370:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_44ccadcc997c1bf2b955faaccd53a870f9ed99f9be8dd32c3b85e797b08a8cad(memPtr) {\n\n        mstore(add(memPtr, 0), \"The regulator is the only who ca\")\n\n        mstore(add(memPtr, 32), \"n create a fiduciary relationshi\")\n\n        mstore(add(memPtr, 64), \"p\")\n\n    }\n\n    function abi_encode_t_stringliteral_44ccadcc997c1bf2b955faaccd53a870f9ed99f9be8dd32c3b85e797b08a8cad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 65)\n        store_literal_in_memory_44ccadcc997c1bf2b955faaccd53a870f9ed99f9be8dd32c3b85e797b08a8cad(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_44ccadcc997c1bf2b955faaccd53a870f9ed99f9be8dd32c3b85e797b08a8cad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_44ccadcc997c1bf2b955faaccd53a870f9ed99f9be8dd32c3b85e797b08a8cad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806302550b781461003b578063f7e317f414610057575b600080fd5b610055600480360381019061005091906101f9565b610075565b005b61005f61016d565b60405161006c9190610235565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610103576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fa906102f9565b60405180910390fd5b6000600180816001815401808255809150500390600052602060002090600502019050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101c68261019b565b9050919050565b6101d6816101bb565b81146101e157600080fd5b50565b6000813590506101f3816101cd565b92915050565b60006020828403121561020f5761020e610196565b5b600061021d848285016101e4565b91505092915050565b61022f816101bb565b82525050565b600060208201905061024a6000830184610226565b92915050565b600082825260208201905092915050565b7f54686520726567756c61746f7220697320746865206f6e6c792077686f20636160008201527f6e206372656174652061206669647563696172792072656c6174696f6e73686960208201527f7000000000000000000000000000000000000000000000000000000000000000604082015250565b60006102e3604183610250565b91506102ee82610261565b606082019050919050565b60006020820190508181036000830152610312816102d6565b905091905056fea2646970667358221220867f84f23f4f2f983310a9b9462bdff39231f846862868342d2bc1f29118127164736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2550B78 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF7E317F4 EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1F9 JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x16D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x235 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x103 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA SWAP1 PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6 DUP3 PUSH2 0x19B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D6 DUP2 PUSH2 0x1BB JUMP JUMPDEST DUP2 EQ PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F3 DUP2 PUSH2 0x1CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20F JUMPI PUSH2 0x20E PUSH2 0x196 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21D DUP5 DUP3 DUP6 ADD PUSH2 0x1E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22F DUP2 PUSH2 0x1BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x226 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54686520726567756C61746F7220697320746865206F6E6C792077686F206361 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E206372656174652061206669647563696172792072656C6174696F6E736869 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E3 PUSH1 0x41 DUP4 PUSH2 0x250 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EE DUP3 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x312 DUP2 PUSH2 0x2D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH32 0x84F23F4F2F983310A9B9462BDFF39231F846862868342D2BC1F2911812716473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "63:874:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;625:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;527:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;625:300;721:10;708:23;;:9;;;;;;;;;;:23;;;699:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;812:38;853:9;:16;;;;;;;;;;;;;;;;;;;;;;;;812:57;;899:8;880;:16;;;:27;;;;;;;;;;;;;;;;;;688:237;625:300;:::o;527:90::-;573:7;600:9;;;;;;;;;;;593:16;;527:90;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:289::-;1843:34;1839:1;1831:6;1827:14;1820:58;1912:34;1907:2;1899:6;1895:15;1888:59;1981:3;1976:2;1968:6;1964:15;1957:28;1703:289;:::o;1998:366::-;2140:3;2161:67;2225:2;2220:3;2161:67;:::i;:::-;2154:74;;2237:93;2326:3;2237:93;:::i;:::-;2355:2;2350:3;2346:12;2339:19;;1998:366;;;:::o;2370:419::-;2536:4;2574:2;2563:9;2559:18;2551:26;;2623:9;2617:4;2613:20;2609:1;2598:9;2594:17;2587:47;2651:131;2777:4;2651:131;:::i;:::-;2643:139;;2370:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "169400",
								"executionCost": "24480",
								"totalCost": "193880"
							},
							"external": {
								"createFiduciaryRelationship(address)": "51185",
								"getRegulator()": "2522"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 937,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 937,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 937,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 471,
									"end": 518,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 471,
									"end": 518,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 471,
									"end": 518,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 471,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 471,
									"end": 518,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 471,
									"end": 518,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 518,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 471,
									"end": 518,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 471,
									"end": 518,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 471,
									"end": 518,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 471,
									"end": 518,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 503,
									"end": 513,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 491,
									"end": 500,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 491,
									"end": 500,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 491,
									"end": 513,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 491,
									"end": 513,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 491,
									"end": 513,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 491,
									"end": 513,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 491,
									"end": 513,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 491,
									"end": 513,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 491,
									"end": 513,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 491,
									"end": 513,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 491,
									"end": 513,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 491,
									"end": 513,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 491,
									"end": 513,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 491,
									"end": 513,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 491,
									"end": 513,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 491,
									"end": 513,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 491,
									"end": 513,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 491,
									"end": 513,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 491,
									"end": 513,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 491,
									"end": 513,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 937,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 937,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 937,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 937,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 937,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 937,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 937,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220867f84f23f4f2f983310a9b9462bdff39231f846862868342d2bc1f29118127164736f6c63430008130033",
									".code": [
										{
											"begin": 63,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 937,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 937,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 63,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 937,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 937,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 937,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 937,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 937,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 937,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 937,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 63,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 63,
											"end": 937,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 63,
											"end": 937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "2550B78"
										},
										{
											"begin": 63,
											"end": 937,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 63,
											"end": 937,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "F7E317F4"
										},
										{
											"begin": 63,
											"end": 937,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 937,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 937,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 937,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 625,
											"end": 925,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 625,
											"end": 925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 625,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 625,
											"end": 925,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 625,
											"end": 925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 625,
											"end": 925,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 625,
											"end": 925,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 625,
											"end": 925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 625,
											"end": 925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 625,
											"end": 925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 625,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 625,
											"end": 925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 625,
											"end": 925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 625,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 625,
											"end": 925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 625,
											"end": 925,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 625,
											"end": 925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 625,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 625,
											"end": 925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 625,
											"end": 925,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 625,
											"end": 925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 625,
											"end": 925,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 617,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 527,
											"end": 617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 527,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 527,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 527,
											"end": 617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 617,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 527,
											"end": 617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 527,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 527,
											"end": 617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 527,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 527,
											"end": 617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 527,
											"end": 617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 527,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 527,
											"end": 617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 617,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 527,
											"end": 617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 527,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 527,
											"end": 617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 527,
											"end": 617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 527,
											"end": 617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 527,
											"end": 617,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 527,
											"end": 617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 527,
											"end": 617,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 625,
											"end": 925,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 625,
											"end": 925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 708,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 708,
											"end": 731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 708,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 708,
											"end": 717,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 708,
											"end": 717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 708,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 708,
											"end": 717,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 708,
											"end": 717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 708,
											"end": 717,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 708,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 708,
											"end": 717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 708,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 708,
											"end": 731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 708,
											"end": 731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 699,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 699,
											"end": 801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 699,
											"end": 801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 699,
											"end": 801,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 699,
											"end": 801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 699,
											"end": 801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 699,
											"end": 801,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 699,
											"end": 801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 699,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 699,
											"end": 801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 699,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 699,
											"end": 801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 699,
											"end": 801,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 699,
											"end": 801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 699,
											"end": 801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 699,
											"end": 801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 699,
											"end": 801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 699,
											"end": 801,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 699,
											"end": 801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 699,
											"end": 801,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 699,
											"end": 801,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 699,
											"end": 801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 812,
											"end": 850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 853,
											"end": 869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 853,
											"end": 869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 853,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 853,
											"end": 869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 853,
											"end": 869,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 853,
											"end": 869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 853,
											"end": 869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 853,
											"end": 869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 853,
											"end": 869,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 853,
											"end": 869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 853,
											"end": 869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 853,
											"end": 869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 853,
											"end": 869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 853,
											"end": 869,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 853,
											"end": 869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 853,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 853,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 869,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 853,
											"end": 869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 853,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 853,
											"end": 869,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 853,
											"end": 869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 812,
											"end": 869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 812,
											"end": 869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 899,
											"end": 907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 896,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 907,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 880,
											"end": 907,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 880,
											"end": 907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 907,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 907,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 880,
											"end": 907,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 880,
											"end": 907,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 880,
											"end": 907,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 880,
											"end": 907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 907,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 880,
											"end": 907,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 880,
											"end": 907,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 880,
											"end": 907,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 880,
											"end": 907,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 880,
											"end": 907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 907,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 688,
											"end": 925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 625,
											"end": 925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 625,
											"end": 925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 617,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 527,
											"end": 617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 573,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 600,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 600,
											"end": 609,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 600,
											"end": 609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 600,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 600,
											"end": 609,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 600,
											"end": 609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 600,
											"end": 609,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 600,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 600,
											"end": 609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 593,
											"end": 609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 593,
											"end": 609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 527,
											"end": 617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1263,
											"end": 1287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1444,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1690,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1992,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1703,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "54686520726567756C61746F7220697320746865206F6E6C792077686F206361"
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1912,
											"end": 1946,
											"name": "PUSH",
											"source": 1,
											"value": "6E206372656174652061206669647563696172792072656C6174696F6E736869"
										},
										{
											"begin": 1907,
											"end": 1909,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1888,
											"end": 1947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 1984,
											"name": "PUSH",
											"source": 1,
											"value": "7000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1968,
											"end": 1974,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1957,
											"end": 1985,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2364,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1998,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2225,
											"end": 2227,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2220,
											"end": 2223,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2161,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2228,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2161,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2228,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2326,
											"end": 2329,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2237,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2330,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2237,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2355,
											"end": 2357,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2350,
											"end": 2353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2370,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2576,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2563,
											"end": 2572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2559,
											"end": 2577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2609,
											"end": 2610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2607,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2611,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2634,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2777,
											"end": 2781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2651,
											"end": 2782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2782,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2651,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Fiduciary.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"createFiduciaryRelationship(address)": "02550b78",
							"getRegulator()": "f7e317f4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_settlor\",\"type\":\"address\"}],\"name\":\"createFiduciaryRelationship\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegulator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fiduciary.sol\":\"Fiduciary\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Fiduciary.sol\":{\"keccak256\":\"0x73f5c520da20b5484143498fd11cd629bddc12f6a38e2b73d3e6820e15ad2755\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26a02e47197484eab0863e6c53bce8675c2bd3bcfa14f11dd8d39c37ee45ed3\",\"dweb:/ipfs/QmPzkW2S99s4FMbXd8GKHby2LHb52CsHZpHVBd4WRvbcDG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Fiduciary.sol:Fiduciary",
								"label": "regulator",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 32,
								"contract": "contracts/Fiduciary.sol:Fiduciary",
								"label": "relations",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_struct(FiduciaryRelationship)28_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Beneficiary)13_storage)dyn_storage": {
								"base": "t_struct(Beneficiary)13_storage",
								"encoding": "dynamic_array",
								"label": "struct Fiduciary.Beneficiary[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(FiduciaryRelationship)28_storage)dyn_storage": {
								"base": "t_struct(FiduciaryRelationship)28_storage",
								"encoding": "dynamic_array",
								"label": "struct Fiduciary.FiduciaryRelationship[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Beneficiary)13_storage": {
								"encoding": "inplace",
								"label": "struct Fiduciary.Beneficiary",
								"members": [
									{
										"astId": 10,
										"contract": "contracts/Fiduciary.sol:Fiduciary",
										"label": "addressB",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 12,
										"contract": "contracts/Fiduciary.sol:Fiduciary",
										"label": "benefits",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(FiduciaryRelationship)28_storage": {
								"encoding": "inplace",
								"label": "struct Fiduciary.FiduciaryRelationship",
								"members": [
									{
										"astId": 15,
										"contract": "contracts/Fiduciary.sol:Fiduciary",
										"label": "settlor",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 19,
										"contract": "contracts/Fiduciary.sol:Fiduciary",
										"label": "beneficiaries",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(Beneficiary)13_storage)dyn_storage"
									},
									{
										"astId": 23,
										"contract": "contracts/Fiduciary.sol:Fiduciary",
										"label": "beneficiariesP",
										"offset": 0,
										"slot": "2",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 25,
										"contract": "contracts/Fiduciary.sol:Fiduciary",
										"label": "balance",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 27,
										"contract": "contracts/Fiduciary.sol:Fiduciary",
										"label": "deadline",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Fiduciary.sol": {
				"ast": {
					"absolutePath": "contracts/Fiduciary.sol",
					"exportedSymbols": {
						"Fiduciary": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Fiduciary",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "Fiduciary",
							"nameLocation": "72:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "regulator",
									"nameLocation": "103:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "95:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "95:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "Fiduciary.Settlor",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "addressS",
											"nameLocation": "147:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "139:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 4,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "139:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "amountMoney",
											"nameLocation": "165:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "160:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "160:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Settlor",
									"nameLocation": "126:7:0",
									"nodeType": "StructDefinition",
									"scope": 77,
									"src": "119:62:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Fiduciary.Beneficiary",
									"id": 13,
									"members": [
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "addressB",
											"nameLocation": "219:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "211:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 9,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "211:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 12,
											"mutability": "mutable",
											"name": "benefits",
											"nameLocation": "238:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "233:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 11,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "233:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Beneficiary",
									"nameLocation": "194:11:0",
									"nodeType": "StructDefinition",
									"scope": 77,
									"src": "187:64:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Fiduciary.FiduciaryRelationship",
									"id": 28,
									"members": [
										{
											"constant": false,
											"id": 15,
											"mutability": "mutable",
											"name": "settlor",
											"nameLocation": "299:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "291:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 14,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "291:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "beneficiaries",
											"nameLocation": "326:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "311:28:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Beneficiary_$13_storage_$dyn_storage_ptr",
												"typeString": "struct Fiduciary.Beneficiary[]"
											},
											"typeName": {
												"baseType": {
													"id": 17,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 16,
														"name": "Beneficiary",
														"nameLocations": [
															"311:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 13,
														"src": "311:11:0"
													},
													"referencedDeclaration": 13,
													"src": "311:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Beneficiary_$13_storage_ptr",
														"typeString": "struct Fiduciary.Beneficiary"
													}
												},
												"id": 18,
												"nodeType": "ArrayTypeName",
												"src": "311:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Beneficiary_$13_storage_$dyn_storage_ptr",
													"typeString": "struct Fiduciary.Beneficiary[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 23,
											"mutability": "mutable",
											"name": "beneficiariesP",
											"nameLocation": "370:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "344:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 22,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "344:25:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 21,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "364:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 25,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "394:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "389:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 24,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "389:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 27,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "411:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "406:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 26,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "406:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FiduciaryRelationship",
									"nameLocation": "264:21:0",
									"nodeType": "StructDefinition",
									"scope": 77,
									"src": "257:167:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "relations",
									"nameLocation": "455:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "430:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_FiduciaryRelationship_$28_storage_$dyn_storage",
										"typeString": "struct Fiduciary.FiduciaryRelationship[]"
									},
									"typeName": {
										"baseType": {
											"id": 30,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 29,
												"name": "FiduciaryRelationship",
												"nameLocations": [
													"430:21:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 28,
												"src": "430:21:0"
											},
											"referencedDeclaration": 28,
											"src": "430:21:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_FiduciaryRelationship_$28_storage_ptr",
												"typeString": "struct Fiduciary.FiduciaryRelationship"
											}
										},
										"id": 31,
										"nodeType": "ArrayTypeName",
										"src": "430:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_FiduciaryRelationship_$28_storage_$dyn_storage_ptr",
											"typeString": "struct Fiduciary.FiduciaryRelationship[]"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "486:32:0",
										"statements": [
											{
												"expression": {
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "regulator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "491:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 36,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "503:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "507:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "503:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "491:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "491:22:0"
											}
										]
									},
									"id": 41,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "483:2:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "486:0:0"
									},
									"scope": 77,
									"src": "471:47:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "582:35:0",
										"statements": [
											{
												"expression": {
													"id": 46,
													"name": "regulator",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "600:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 45,
												"id": 47,
												"nodeType": "Return",
												"src": "593:16:0"
											}
										]
									},
									"functionSelector": "f7e317f4",
									"id": 49,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRegulator",
									"nameLocation": "536:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "549:2:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "573:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:9:0"
									},
									"scope": 77,
									"src": "527:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "688:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 55,
																"name": "regulator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "708:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 56,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "721:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "725:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "721:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "708:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520726567756c61746f7220697320746865206f6e6c792077686f2063616e206372656174652061206669647563696172792072656c6174696f6e73686970",
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "733:67:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44ccadcc997c1bf2b955faaccd53a870f9ed99f9be8dd32c3b85e797b08a8cad",
																"typeString": "literal_string \"The regulator is the only who can create a fiduciary relationship\""
															},
															"value": "The regulator is the only who can create a fiduciary relationship"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44ccadcc997c1bf2b955faaccd53a870f9ed99f9be8dd32c3b85e797b08a8cad",
																"typeString": "literal_string \"The regulator is the only who can create a fiduciary relationship\""
															}
														],
														"id": 54,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "699:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "699:102:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "699:102:0"
											},
											{
												"assignments": [
													64
												],
												"declarations": [
													{
														"constant": false,
														"id": 64,
														"mutability": "mutable",
														"name": "relation",
														"nameLocation": "842:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 75,
														"src": "812:38:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FiduciaryRelationship_$28_storage_ptr",
															"typeString": "struct Fiduciary.FiduciaryRelationship"
														},
														"typeName": {
															"id": 63,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 62,
																"name": "FiduciaryRelationship",
																"nameLocations": [
																	"812:21:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 28,
																"src": "812:21:0"
															},
															"referencedDeclaration": 28,
															"src": "812:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FiduciaryRelationship_$28_storage_ptr",
																"typeString": "struct Fiduciary.FiduciaryRelationship"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 68,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 65,
															"name": "relations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "853:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FiduciaryRelationship_$28_storage_$dyn_storage",
																"typeString": "struct Fiduciary.FiduciaryRelationship storage ref[] storage ref"
															}
														},
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "863:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "853:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FiduciaryRelationship_$28_storage_$dyn_storage_ptr_$returns$_t_struct$_FiduciaryRelationship_$28_storage_$attached_to$_t_array$_t_struct$_FiduciaryRelationship_$28_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Fiduciary.FiduciaryRelationship storage ref[] storage pointer) returns (struct Fiduciary.FiduciaryRelationship storage ref)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "853:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FiduciaryRelationship_$28_storage",
														"typeString": "struct Fiduciary.FiduciaryRelationship storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "812:57:0"
											},
											{
												"expression": {
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 69,
															"name": "relation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "880:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FiduciaryRelationship_$28_storage_ptr",
																"typeString": "struct Fiduciary.FiduciaryRelationship storage pointer"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "889:7:0",
														"memberName": "settlor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 15,
														"src": "880:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 72,
														"name": "_settlor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "899:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "880:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "880:27:0"
											}
										]
									},
									"functionSelector": "02550b78",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createFiduciaryRelationship",
									"nameLocation": "634:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "_settlor",
												"nameLocation": "671:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "663:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:18:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "688:0:0"
									},
									"scope": 77,
									"src": "625:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 78,
							"src": "63:874:0",
							"usedErrors": []
						}
					],
					"src": "35:902:0"
				},
				"id": 0
			}
		}
	}
}